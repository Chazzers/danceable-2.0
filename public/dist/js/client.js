const favouriteBtn=document.getElementById("favourite-btn"),allPlaylists=document.querySelectorAll(".playlist");if("serviceWorker"in navigator&&navigator.serviceWorker.register("/sw.js").then(e=>{console.log("Registration succeeded. Scope is "+e.scope)}).catch(e=>{console.log("Registration failed with "+e)}),favouriteBtn){const{id:c,name:d}=favouriteBtn.dataset;favouriteBtn.addEventListener("click",e=>{e.preventDefault();const o=["/manifest.json","/sw.js","/js/client.js","/css/styles.css",`/playlists/${c}`];caches.open(`${c}`).then(e=>{e.addAll(o)}),favouriteBtn.style.backgroundColor="#6D6C6C",favouriteBtn.innerHTML="Saved for offline"}),caches.keys().then(e=>{console.log(e.includes(c)),e.includes(c)&&(favouriteBtn.style.backgroundColor="#6D6C6C",favouriteBtn.innerHTML="Saved for offline")})}if(allPlaylists&&!window.navigator.onLine){const i=[...allPlaylists];caches.keys().then(o=>{const e=i.filter(e=>!o.includes(e.dataset.id));e.forEach(e=>e.style.display="none")})}window.navigator.onLine||"/"!==window.location.pathname||(console.log(window.location),window.location=`${window.location.href}playlists`);